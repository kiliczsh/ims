basePath: /api
definitions:
  domain.AuditEventType:
    enum:
    - batch_started
    - batch_completed
    - batch_failed
    - message_sent
    - message_failed
    - scheduler_started
    - scheduler_stopped
    - api_request
    - webhook_request
    - webhook_response
    type: string
    x-enum-varnames:
    - EventBatchStarted
    - EventBatchCompleted
    - EventBatchFailed
    - EventMessageSent
    - EventMessageFailed
    - EventSchedulerStarted
    - EventSchedulerStopped
    - EventAPIRequest
    - EventWebhookRequest
    - EventWebhookResponse
  domain.AuditLog:
    properties:
      batch_id:
        description: Context information
        type: string
      created_at:
        type: string
      description:
        type: string
      duration_ms:
        description: Metrics
        type: integer
      endpoint:
        type: string
      event_name:
        type: string
      event_type:
        $ref: '#/definitions/domain.AuditEventType'
      failure_count:
        type: integer
      http_method:
        description: Request/Response details
        type: string
      id:
        type: string
      message_count:
        type: integer
      message_id:
        type: string
      metadata:
        additionalProperties: true
        description: Additional data (JSON)
        type: object
      request_id:
        type: string
      status_code:
        type: integer
      success_count:
        type: integer
    type: object
  domain.AuditLogStats:
    properties:
      average_request_duration:
        type: number
      event_type_counts:
        additionalProperties:
          type: integer
        type: object
      last_event_time:
        type: string
      total_count:
        type: integer
    type: object
  domain.DeadLetterMessage:
    properties:
      content:
        example: Hello, this is a test message
        type: string
      created_at:
        example: "2023-12-01T10:15:00Z"
        type: string
      failure_reason:
        example: webhook timeout after 3 retries
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      last_attempt_at:
        example: "2023-12-01T10:15:00Z"
        type: string
      moved_to_dlq_at:
        example: "2023-12-01T10:15:00Z"
        type: string
      original_message_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      phone_number:
        example: "+1234567890"
        type: string
      retry_count:
        example: 3
        type: integer
      webhook_response:
        example: 'error: connection timeout'
        type: string
    type: object
  domain.SentMessageResponse:
    properties:
      content:
        example: Hello, this is a test message
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      message_id:
        example: msg_12345
        type: string
      phone_number:
        example: "+1234567890"
        type: string
      sent_at:
        example: "2023-12-01T10:05:00Z"
        type: string
    type: object
  handlers.ControlRequest:
    properties:
      action:
        description: '"start" or "stop"'
        enum:
        - start
        - stop
        example: start
        type: string
    type: object
  handlers.ControlResponse:
    properties:
      message:
        example: Scheduler started successfully
        type: string
      status:
        properties:
          running:
            example: true
            type: boolean
          started_at:
            example: "2023-12-01T10:00:00Z"
            type: string
        type: object
      success:
        example: true
        type: boolean
    type: object
  handlers.CreateMessageRequest:
    properties:
      content:
        example: Hello, this is a test message
        type: string
      phone_number:
        example: "+1234567890"
        type: string
    type: object
  handlers.CreateMessageResponse:
    properties:
      content:
        example: Hello, this is a test message
        type: string
      created_at:
        example: "2023-12-01T10:00:00Z"
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      phone_number:
        example: "+1234567890"
        type: string
      status:
        example: pending
        type: string
    type: object
  handlers.DeadLetterMessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/domain.DeadLetterMessage'
        type: array
      page:
        example: 1
        type: integer
      page_size:
        example: 20
        type: integer
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        example: Invalid action. Use 'start' or 'stop'
        type: string
    type: object
  handlers.HealthResponse:
    properties:
      database:
        example: connected
        type: string
      errors:
        items:
          type: string
        type: array
      redis:
        example: connected
        type: string
      scheduler:
        additionalProperties: true
        type: object
      status:
        example: healthy
        type: string
      timestamp:
        example: "2023-12-01T10:00:00Z"
        type: string
    type: object
  handlers.SentMessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/domain.SentMessageResponse'
        type: array
      page:
        example: 1
        type: integer
      page_size:
        example: 20
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A message scheduling and sending service with audit logging
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: IMS API
  version: "1.0"
paths:
  /audit:
    get:
      consumes:
      - application/json
      description: Retrieve audit logs with optional filtering
      parameters:
      - collectionFormat: csv
        description: Filter by event types
        in: query
        items:
          type: string
        name: event_types
        type: array
      - description: Filter by batch ID
        in: query
        name: batch_id
        type: string
      - description: Filter by message ID
        in: query
        name: message_id
        type: string
      - description: Filter by request ID
        in: query
        name: request_id
        type: string
      - description: Filter by endpoint
        in: query
        name: endpoint
        type: string
      - description: Filter from date (RFC3339 format)
        in: query
        name: from_date
        type: string
      - description: Filter to date (RFC3339 format)
        in: query
        name: to_date
        type: string
      - description: Limit number of results
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AuditLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audit logs
      tags:
      - audit
  /audit/batch/{batch_id}:
    get:
      consumes:
      - application/json
      description: Retrieve all audit logs for a specific batch
      parameters:
      - description: Batch ID
        in: path
        name: batch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AuditLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get batch audit logs
      tags:
      - audit
  /audit/cleanup:
    delete:
      consumes:
      - application/json
      description: Delete audit logs older than specified days
      parameters:
      - description: Number of days to keep
        in: query
        name: days
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Cleanup old audit logs
      tags:
      - audit
  /audit/message/{message_id}:
    get:
      consumes:
      - application/json
      description: Retrieve all audit logs for a specific message
      parameters:
      - description: Message ID
        in: path
        name: message_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AuditLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get message audit logs
      tags:
      - audit
  /audit/stats:
    get:
      consumes:
      - application/json
      description: Retrieve statistics about audit logs
      parameters:
      - collectionFormat: csv
        description: Filter by event types
        in: query
        items:
          type: string
        name: event_types
        type: array
      - description: Filter from date (RFC3339 format)
        in: query
        name: from_date
        type: string
      - description: Filter to date (RFC3339 format)
        in: query
        name: to_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AuditLogStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audit log statistics
      tags:
      - audit
  /control:
    post:
      consumes:
      - application/json
      description: Start or stop the message scheduler
      parameters:
      - description: Control action
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ControlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ControlResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Control Scheduler
      tags:
      - scheduler
  /health:
    get:
      consumes:
      - application/json
      description: Check the health status of the service including database, Redis,
        and scheduler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Health Check
      tags:
      - health
  /messages:
    post:
      consumes:
      - application/json
      description: Create a new message that will be queued for sending
      parameters:
      - description: Message details
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateMessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Message
      tags:
      - messages
  /messages/dead-letter:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of messages that failed permanently and
        were moved to the dead letter queue
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 'Page size (default: 20, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DeadLetterMessagesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Dead Letter Messages
      tags:
      - messages
  /messages/sent:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of successfully sent messages
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 'Page size (default: 20, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SentMessagesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Sent Messages
      tags:
      - messages
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
